@using Azimuth.DataAccess.Entities
@model List<Azimuth.Shared.Dto.PlaylistData>
@{
    var playlistFollowData = ViewData["playlistFollowing"] as IEnumerable<PlaylistLike>;
    var temp = playlistFollowData.ToList();
}

@foreach (var playlist in Model)
{
    string playlistName = "";
    if (playlist.Name.Length > 15)
    {
        playlistName = playlist.Name.Substring(0, 25) + "...";
    }
    else
    {
        playlistName = playlist.Name;
    }
    var duration = Convert.ToDecimal(playlist.Duration);
    var hours = Math.Floor(duration / (60 * 60));
    var minutes = Math.Floor(duration / 60) - (60 * hours);
    var seconds = (duration % 60);
    string forrmattedDuration = ((hours > 0) ? ((hours > 10) ? hours.ToString() : "0" + hours.ToString()) + ":" : "") +
                                ((minutes > 10) ? minutes.ToString() : "0" + minutes) + ":"
                                + ((seconds > 10) ? seconds.ToString() : "0" + seconds);
    
    <div class="playlist-plated">
        <div id="playlist-header-spinner" class="spinner loader"></div>
        <div class="playlist-plated-info">
            <div class="playlistName">@playlistName</div>
            <div class="creator">
                Created by: @{ @Html.ActionLink(playlist.Creator.Name, "Index", "UserProfile", new { id = playlist.Creator.UserId }, null);}
            </div>
            <div class="duration">Duration: @forrmattedDuration</div>
            <div class="genres">Genres: 
                @{
                    string genres = playlist.Genres.Aggregate("", (current, genre) => current + (@genre + " "));
                }
                @genres
            </div>
            <div class="plylistFolloiwngs">Likes: @playlist.PlaylistLikes Favourited: @playlist.PlaylistFavourited Listeners: @playlist.PlaylistListeners</div>
                 
            @{
                var curPlaylistFollowData = temp.FirstOrDefault(s => s.Playlist.Id == playlist.Id);
            }

            <input type="hidden" class="playlistId" value="@playlist.Id.ToString()"/>
            @if (curPlaylistFollowData != null)
            {
                <input type="hidden" class="isLiked" value="@curPlaylistFollowData.IsLiked.ToString()"/>
                <input type="hidden" class="isFavourited" value="@curPlaylistFollowData.IsFavorite.ToString()" />
            }
            else
            {
                <input type="hidden" class="isLiked" value="False"/>
                <input type="hidden" class="isFavourited" value="False" />
            }
        </div>
    </div>
}

<script type="text/javascript" src="../../Scripts/jquery-1.10.2.js"></script>

<script type="text/javascript">

    $(document).ready(function() {
        $('#tracksArea').hide();
        //$('#playlistsArea').show();
    });

    $('.playlist-plated').click(function () {
        //$('#playlists-plated').hide();
        $('#playlistsArea').hide();
        $('#playlist-spinner').show();
        var $currentPlaylist = $(this);
        $.ajax({
            url: '@Url.Action("_PlaylistTracks", "PublicPlaylists")?playlistId=' + $currentPlaylist.find('.playlistId').val() +
                "&playlistName=" + $currentPlaylist.find('.playlistName').text() +
                "&isLiked=" + $currentPlaylist.find('.isLiked').val() +
                "&isFavourited=" + $currentPlaylist.find('.isFavourited').val(),
            type: 'GET',
            success: function(data) {
                $(data).appendTo($('#tracksArea'));
                //$('#playlist-spinner').fadeIn('normal');
            }
        });
    });
</script>

<script type="text/javascript">
    var self = this;

    this._setNewImage = function ($playlist, id) {
        $.ajax({
            url: '/api/playlists/image/' + id,
            success: function (image) {
                var $logo = $playlist;
                $logo.fadeOut(200, function () {
                    if (image != "") {
                        $logo.css({
                            "background-image": 'url(' + image + ')'
                        });
                    } else {
                        $logo.css({
                            "background-image": 'url(http://cdns2.freepik.com/free-photo/music-album_318-1832.jpg)'
                        });
                    }
                });
                $logo.fadeIn(200);
            }
        });
    };

    $('.playlist-plated').each(function() {
        self._setNewImage($(this), $(this).find('.playlistId').val());
    });
</script>